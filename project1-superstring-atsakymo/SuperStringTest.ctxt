#BlueJ class context
comment0.target=SuperStringTest
comment0.text=\n\ The\ test\ class\ SuperStringTest.\n\n\ @author\ \ Mike\ Roam\n\ @version\ 2022f\ Jun\ 03\n\ \n\ Starting\ Mike's\ DIY,\ getLeadingLyric(\ )\ is\ working.\n\ ??\ Do\ the\ tests\ worry\ sufficiently\ about\ null\ and\ ""\ strings??\ \ TODO\n\ \n\n\ If\ junit\ isn't\ found,\ try\ IntelliJ's\ menu\:\ \ \ \ \ \ \ \ \n\ File\:ProjectStructure\:ProjectSettings\:Libraries\:\ "+"\ \ \ \ \ \ \ \ \n\ choose\ fromMaven\ \ (search\ w/\ magnifyingGlass?)\ for\ something\ like\ \ \ \ \ \ \ \ \n\ org.junit.jupiter\:junit-jupiter\:5.8.2\ \ \ \ \ \ \ \ \n\n
comment1.params=
comment1.target=SuperStringTest()
comment1.text=\n\ Default\ constructor\ for\ test\ class\ SuperStringTest\n
comment10.params=
comment10.target=void\ getLeadingLyric()
comment11.params=
comment11.target=void\ chopLeadingLyric()
comment12.params=
comment12.target=void\ getLine()
comment12.text=\n\ Trying\ to\ test\ getLine(x).\n\ Edge\ cases\:\ \n\ [\ ]\ null\ SuperString\n\ [\ ]\ using\ non-arg\ constructor\ (which\ makes\ "<empty\ text>"\n\ [\ ]\ empty\ SuperString\n\ [\ ]\ index\ out\ of\ bounds\n
comment13.params=
comment13.target=void\ getWord()
comment13.text=\n\ TODO\ make\ a\ more\ difficult\ test\n\ [\ ]\ with\ line\ breaks\ (??\ can\ words\ wrap\ line\:\ no,\ /n\ counts\ as\ space.\ Right??)\n\ \n
comment14.params=
comment14.target=void\ getChar()
comment14.text=\n\ TODO\ make\ a\ more\ difficult\ test\n\ [\ ]\ with\ line\ breaks\ (??\ can\ words\ wrap\ line\:\ no,\ /n\ counts\ as\ a\ char\ or\ NO??)\n
comment2.params=
comment2.target=void\ setUp()
comment2.text=\n\ Sets\ up\ the\ test\ fixture.\n\n\ Called\ before\ every\ test\ case\ method.\n
comment3.params=
comment3.target=void\ tearDown()
comment3.text=\n\ Tears\ down\ the\ test\ fixture.\n\n\ Called\ after\ every\ test\ case\ method.\n
comment4.params=
comment4.target=void\ getWord2()
comment5.params=
comment5.target=void\ getWord2yoiks()
comment6.params=
comment6.target=void\ beginsWithChord()
comment6.text=\n\ \n
comment7.params=
comment7.target=void\ getChordI()
comment7.text=\n\ testing\ the\ getChord(\ i\ )\n
comment8.params=
comment8.target=void\ getLeadingChord()
comment8.text=\n\ I\ guess\ this\ should\ be\ able\ to\ handle\ leading\ space\ "\ {F}"\ but\ NOT\ anything\ else\n
comment9.params=
comment9.target=void\ chopLeadingChord()
numComments=15
