#BlueJ class context
comment0.target=LinesWithLiftedChords
comment0.text=\n\ Holds\ chords\ and\ lyrics\ separately\n\ in\ separate\ lines.\ There\ are\ several\ ways\n\ to\ do\ this\:\ currently\ trying\ to\ have\ two\n\ parallel\ arrays\ of\ Strings,\ with\ each\ array\ item\n\ counting\ as\ a\ line\ of\ text.\n\n\ @author\ Mike\ Roam\n\ @version\ 2022\ May\ 19\n
comment1.params=
comment1.target=LinesWithLiftedChords()
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ LinesWithLiftedChords\n
comment2.params=newChords\ newLyrics
comment2.target=LinesWithLiftedChords(java.lang.String,\ java.lang.String)
comment2.text=\n\ Constructor\ for\ objects\ of\ class\ LinesWithLiftedChords\n
comment3.params=newChords
comment3.target=void\ appendChords(java.lang.String)
comment3.text=\n\ appending\ a\ chord(s)\ will\ require\ lengthening\ the\ lyricLines\ also\ to\ stay\ matched.\n
comment4.params=newLyrics
comment4.target=void\ appendLyrics(java.lang.String)
comment4.text=\n\ appending\ lyrics\ will\ require\ lengthening\ the\ chordLines\ also\ to\ stay\ matched.\n
comment5.params=
comment5.target=void\ makeLinesSameLength()
comment5.text=\n\ Make\ the\ lyric\ and\ chord\ lines\ be\ the\ same\ length.\n\ Not\ public,\ not\ to\ be\ used\ by\ outsiders.\n
comment6.params=
comment6.target=void\ beginNextLines()
comment6.text=\n\ Throws\ a\ "\\n"\ (or\ System.getProperty("line.separator");\ )\ onto\ both\ lines\n
comment7.params=
comment7.target=LineWithInternalChords\ toFlattened()
comment7.text=\n\ Convert\ our\ chordsLifted\ to\ chordsInternal\ \n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\n\ Might\ want\ to\ use\ '\\n'\ instead\ of\ "/n"\ \n\ (I've\ had\ trouble\ getting\ them\ from\ BlueJ's\ GUI\n
numComments=9
